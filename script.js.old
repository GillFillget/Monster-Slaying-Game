let Protag;
let Display;
let Scale;
let Rock = [];
let RockCount = 10;
let menuSelect = 0;
//screenspace is the type of screen the player is currently in
//0 is a title screen, 1 is navigating, 2 is fight screen, 3 is player menu
let screenSpace = 0;
let menuBuild = [];

function setup() {
  createCanvas(800, 600);
  Scale = width / 20;
  Protag = new Player();
  Display = new ScreenMode();
  for (i = 0; i < RockCount; i++) {
    Rock[i] = new Stone(
      Scale * int(random(1, width / Scale - 1)),
      Scale * int(random(1, height / Scale - 2))
    );
  }
  for (i = 0; i < 3; i++) {
    menuBuild[i] = new SelectionTier(Scale * 15, Scale * (1.5 * i + 9.5));
  }
}

function draw() {
  if (screenSpace === 0) {
    Display.title();
  }
  if (screenSpace == 1) {
    Display.game();
  }
  if (screenSpace == 2) {
    Display.fight();
  }
  if (screenSpace == 3) {
    Display.menu();
    for (i = 0; i < menuBuild.length; i++) {
      menuBuild[i].draw();
      menuBuild[i].selected = false;
      menuBuild[menuSelect].selected = true;
    }
  }
}

class Player {
  constructor() {
    this.position = [0, 0];
    this.exp = [0, 100];
    this.vitalMax = [100, 100, 10];
    this.currentVital = [100, 100];
    this.scale = Scale;
  }
  draw() {
    rect(this.position[0], this.position[1], this.scale, this.scale);
  }
  motion(direction) {
    //directions are 0 = up 1 = left 2 = down 3 = right
    if (direction === 0) {
      this.position[1] += this.scale * -1;
      if (this.position[1] < 0) {
        this.position[1] = height - this.scale * 2;
        regenField();
      }
      for (i = 0; i < RockCount; i++) {
        if (this.hitDetect(Rock[i])) {
          this.position[1] += this.scale;
        }
      }
    }
    if (direction == 1) {
      this.position[0] += this.scale * -1;
      if (this.position[0] < 0) {
        this.position[0] = width - this.scale;
        regenField();
      }
      for (i = 0; i < RockCount; i++) {
        if (this.hitDetect(Rock[i])) {
          this.position[0] += this.scale;
        }
      }
    }
    if (direction == 2) {
      this.position[1] += this.scale;
      if (this.position[1] > height - this.scale * 2) {
        this.position[1] = 0;
        regenField();
      }
      for (i = 0; i < RockCount; i++) {
        if (this.hitDetect(Rock[i])) {
          this.position[1] += this.scale * -1;
        }
      }
    }
    if (direction == 3) {
      this.position[0] += this.scale;
      if (this.position[0] > width - this.scale) {
        this.position[0] = 0;
        regenField();
      }
      for (i = 0; i < RockCount; i++) {
        if (this.hitDetect(Rock[i])) {
          this.position[0] += this.scale * -1;
        }
      }
    }
  }
  hitDetect(target) {
    if (
      this.position[0] == target.position[0] &&
      this.position[1] == target.position[1]
    ) {
      return true;
    }
  }
  damageDetect(damage) {
    this.currentVital[0] += -1 * damage;
  }
}

class ScreenMode {
  title() {
    background(200);
    text(
      "Press Z to explore the shifting fields to battle monsters and get stronger",
      Scale * 5,
      200
    );
  }
  game() {
    background(200);
    fill(255);
    Protag.draw();
    fill(100);
    for (i = 0; i < RockCount; i++) {
      Rock[i].draw();
    }
  }
  fight() {}
  menu() {
    playerMenu();
  }
}

class Stone {
  constructor(x, y) {
    this.position = [x, y];
    this.scale = Scale;
  }
  draw() {
    rect(this.position[0], this.position[1], this.scale, this.scale);
  }
}



function Affirm() {
  if (screenSpace == 3) {
    if (menuSelect == 0&&Protag.exp[1]>=100) {
      menuSelect = 3;
      levelUP();
    } else if (menuSelect == 1) {
      Protag.currentVital[0] += Protag.vitalMax[0] / 2;
      if (Protag.currentVital[0] > Protag.vitalMax[0]) {
        Protag.currentVital[0] = Protag.vitalMax[0];
      }
    } else if (menuSelect == 2) {
      screenSpace = 1;
      menuSelect = 0;
      while(menuBuild.length > 3){
        menuBuild.pop();
      }
    }
  } else if (screenSpace == 1) {
    screenSpace = 3;
  }
}

function regenField() {
  for (i = 0; i < RockCount; i++) {
    Rock[i].position[0] = Scale * int(random(1, width / Scale - 1));
    Rock[i].position[1] = Scale * int(random(1, height / Scale - 2));
  }
}

function playerMenu() {
  fill(255);
  rect(0, height - Scale * 6, width, Scale * 6);
  fill(0);
  text("Level: " + Protag.exp[0], Scale * 2, height - Scale * 5);
  text("Experience: " + Protag.exp[1], Scale * 2, height - Scale * 4);
  text(
    "Health: " + Protag.currentVital[0] + "/" + Protag.vitalMax[0],
    Scale * 2,
    height - Scale * 3
  );
  text(
    "Endurance: " + Protag.currentVital[1] + "/" + Protag.vitalMax[1],
    Scale * 2,
    height - Scale * 2
  );
  text("Strength: " + Protag.vitalMax[2], Scale * 2, height - Scale * 1);
  menuBuild[0].text = "Level UP";
  menuBuild[1].text = "Camp";
  menuBuild[2].text = "Exit";
}

function levelUP(){
  menuBuild[3] = new SelectionTier(Scale * 11, Scale * (9.5));
  menuBuild[4] = new SelectionTier(Scale * 11, Scale * (11));
  menuBuild[5] = new SelectionTier(Scale * 11, Scale * (12.5));
  
  menuBuild[3].text = "Health";
  menuBuild[4].text = "Endurance";
  menuBuild[5].text = "Strength";  
}

//menu segments
class SelectionTier {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.text = "";
    this.size = Scale;
    this.selected = false;
  }
  draw() {
    if (this.selected) {
      fill(20 * sin(frameCount / 20) + 200);
    } else {
      fill(255);
    }
    rect(this.x, this.y, this.size * 2, this.size);
    fill(0);
    text(this.text, this.x + 2, this.y + this.size / 2);
  }
}

window.addEventListener("keyup", function (e) {
  //gamescreen navigation
  //directions are 0 = up 1 = left 2 = down 3 = right
  if (screenSpace == 1) {
    if (e.key == "ArrowUp") {
      Protag.motion(0);
    }
    if (e.key == "ArrowLeft") {
      Protag.motion(1);
    }
    if (e.key == "ArrowDown") {
      Protag.motion(2);
    }
    if (e.key == "ArrowRight") {
      Protag.motion(3);
    }
  }

  //menu navigation
  if (screenSpace == 3) {
    if (e.key == "ArrowUp") {
      if (menuSelect === 0) {
        menuSelect = menuBuild.length - 1;
      } else {
        menuSelect += -1;
      }
    }
    if (e.key == "ArrowDown") {
      if (menuSelect == menuBuild.length - 1) {
        menuSelect = 0;
      } else {
        menuSelect += 1;
      }
    }
  }

  if (e.key == "z") {
    Affirm();
    //game start button
    if (screenSpace === 0) {
      screenSpace = 1;
    }
  }
});
